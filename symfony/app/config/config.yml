imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: api/services.yml }

# Put parameters here that don"t need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: pt_BR

    ### naming_strategy serializer ###
    jms_serializer.camel_case_naming_strategy.class: JMS\Serializer\Naming\IdenticalPropertyNamingStrategy

    ### uploads path ###
    upload_avatar_path: "%kernel.root_dir%/../web/uploads/avatar_images"
    upload_video_path: "%kernel.root_dir%/../web/uploads/video_files"
    upload_video_image_path: "%kernel.root_dir%/../web/uploads/video_images"
    upload_cache_path: "%kernel.root_dir%/../web/uploads/cache"

    ### uploads relative path to web ###
    upload_avatar_relative_path: "uploads/avatar_images"
    upload_video_relative_path: "uploads/video_files"
    upload_video_image_relative_path: "uploads/video_images"
    upload_cache_relative_path: "uploads/cache"

    #### ffmpeg ####
    ffmpeg:
        ffmpeg_binary: "%kernel.root_dir%/../var/ffmpeg/bin/ffmpeg.exe"
        ffprobe_binary: "%kernel.root_dir%/../var/ffmpeg/bin/ffprobe.exe"
        binary_timeout: 300 # Use 0 for infinite
        threads_count: 4

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    translator:      ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ["twig"]
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/../var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

lexik_jwt_authentication:
    private_key_path: "%kernel.root_dir%/../var/jwt/private.pem"
    public_key_path:  "%kernel.root_dir%/../var/jwt/public.pem"
    pass_phrase:      "%jwt_key_pass_phrase%"
    token_ttl:        3600

stof_doctrine_extensions:
    orm:
        default:
            timestampable: true

bazinga_hateoas:
    serializer:
        json: api.custom_hateoas_json_serializer

vich_uploader:
    db_driver: orm
    mappings:
        user_avatar:
            uri_prefix: "%upload_avatar_relative_path%"
            upload_destination: "%upload_avatar_path%"
            delete_on_remove: true
            delete_on_update: true
            inject_on_load: true
            namer: vich_uploader.namer_uniqid
        video:
            uri_prefix: "%upload_video_relative_path%"
            upload_destination: "%upload_video_path%"
            directory_namer:    api.custom_video_dir_namer_vich_upload
            delete_on_remove: true
            delete_on_update: true
            inject_on_load: true
            namer: vich_uploader.namer_uniqid
        video_image:
            uri_prefix: "%upload_video_image_relative_path%"
            upload_destination: "%upload_video_image_path%"
            directory_namer:    api.custom_video_dir_namer_vich_upload
            delete_on_remove: true
            delete_on_update: true
            inject_on_load: true
            namer: api.custom_video_image_namer_vich_upload

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: false
        forced_allow_origin_value: ~
    paths:
        "^/api/":
            allow_credentials: true
            allow_origin: ["*"]
            allow_headers: ["Authorization","X-Requested-With","X-Custom-Auth","Content-Type","Accept","Origin"]
            allow_methods: ["POST", "PUT", "PATCH", "GET", "DELETE", "OPTIONS"]
            max_age: 3600

liip_imagine:
    resolvers:
        default:
            web_path:
                web_root: "%kernel.root_dir%/../web"
                cache_prefix: "%upload_cache_relative_path%"
    filter_sets:
        cache: ~
        # the name of the "filter set"
        thumb_120_90:
            quality: 100
            filters:
                thumbnail: { size: [120, 90], mode: outbound }
        thumb_320_180:
            quality: 90
            filters:
                thumbnail: { size: [320, 180], mode: outbound }